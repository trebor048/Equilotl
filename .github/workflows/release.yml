# Release builds for Linux, macOS, Windows (GUI + CLI) and publish a GitHub Release.
# Uses setup-go caching and explicit module download (no 'go get').

name: Release
on:
  push:
    tags:
      - v*

env:
  FORCE_COLOR: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions: write-all

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true
          cache-dependency-path: |
            go.sum
            **/go.sum

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt update
          sudo apt install -y pkg-config libsdl2-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libglx-dev libgl1-mesa-dev libxxf86vm-dev libwayland-dev libxkbcommon-dev wayland-protocols extra-cmake-modules

      - name: Download Go modules
        run: |
          go mod tidy
          go mod download

      - name: Build GUI
        run: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -v -tags "static gui" -ldflags "-s -w -X 'vencord/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencord/buildinfo.InstallerTag=${{ github.ref_name }}'" -o Equilotl-x11

      - name: Build CLI
        run: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -v -tags "cli" -ldflags "-s -w -X 'vencord/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencord/buildinfo.InstallerTag=${{ github.ref_name }}'" -o EquilotlCli-linux

      - name: Make executables
        run: chmod +x Equilotl*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Equilotl-linux
          path: |
            Equilotl-x11
            EquilotlCli-linux

  build-mac:
    runs-on: macos-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true
          cache-dependency-path: |
            go.sum
            **/go.sum

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: brew install pkg-config sdl2

      - name: Download Go modules
        run: |
          go mod tidy
          go mod download

      - name: Build GUI
        run: CGO_CFLAGS="-mmacosx-version-min=10.15" CGO_LDFLAGS="-mmacosx-version-min=10.15" CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -v -tags "static gui" -ldflags "-s -w -X 'vencord/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencord/buildinfo.InstallerTag=${{ github.ref_name }}'" -o Equilotl

      - name: Bundle app
        run: |
          mkdir -p Equilotl.app/Contents/MacOS
          mkdir -p Equilotl.app/Contents/Resources
          cp macos/Info.plist Equilotl.app/Contents/Info.plist
          mv Equilotl Equilotl.app/Contents/MacOS/Equilotl
          cp macos/icon.icns Equilotl.app/Contents/Resources/icon.icns
          zip -r Equilotl.MacOS.zip Equilotl.app

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Equilotl-macos
          path: |
            Equilotl.MacOS.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true
          cache-dependency-path: |
            go.sum
            **/go.sum

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSYS2 (for MinGW toolchain & SDL2)
        uses: msys2/setup-msys2@v2
        with:
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-SDL2

      - name: Verify toolchain
        shell: pwsh
        run: |
          g++ --version
          go env

      - name: Download Go modules
        run: |
          go mod tidy
          go mod download

      - name: Install Windows resource tool
        run: go install github.com/tc-hib/go-winres@latest

      - name: Build GUI (no console window)
        shell: pwsh
        env:
          CC: x86_64-w64-mingw32-gcc
          CXX: x86_64-w64-mingw32-g++
        run: |
          go-winres make --product-version "git-tag"
          CGO_ENABLED=1 GOOS=windows GOARCH=amd64 `
            go build -v -tags "static gui" `
            -ldflags "-s -w -H=windowsgui -extldflags=-static -X 'vencord/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencord/buildinfo.InstallerTag=${{ github.ref_name }}'" `
            -o Equilotl.exe

      - name: Build CLI
        shell: pwsh
        env:
          CC: x86_64-w64-mingw32-gcc
          CXX: x86_64-w64-mingw32-g++
        run: |
          CGO_ENABLED=1 GOOS=windows GOARCH=amd64 `
            go build -v -tags "cli" `
            -ldflags "-s -w -X 'vencord/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencord/buildinfo.InstallerTag=${{ github.ref_name }}'" `
            -o EquilotlCli.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Equilotl-windows
          path: |
            Equilotl.exe
            EquilotlCli.exe

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: Equilotl-linux
          path: linux

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: Equilotl-macos
          path: macos

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: Equilotl-windows
          path: windows

      - name: Create the release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          token: ${{ env.GITHUB_TOKEN }}
          generate_release_notes: true
          make_latest: true
          prerelease: false
          draft: false
          body: |
            This is release ${{ github.ref_name }} of Equilotl.
          files: |
            linux/Equilotl-x11
            linux/EquilotlCli-linux
            macos/Equilotl.MacOS.zip
            windows/Equilotl.exe
            windows/EquilotlCli.exe
