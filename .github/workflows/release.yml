  build-windows:
    runs-on: self-hosted   # your Windows self-hosted runner

    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Local\go-build
            ~\go\pkg\mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go get -v
        shell: powershell

      - name: Install go-winres
        run: go install github.com/tc-hib/go-winres@latest
        shell: powershell

      - name: Build GUI
        run: |
          go-winres make --product-version "${{ github.ref_name }}"
          set CGO_ENABLED=1
          set GOOS=windows
          set GOARCH=amd64
          go build -v -tags "static gui" -ldflags "-s -w -H=windowsgui -X \"vencord/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)\" -X \"vencord/buildinfo.InstallerTag=${{ github.ref_name }}\"" -o Equilotl.exe
        shell: cmd

      - name: Build CLI
        run: |
          set CGO_ENABLED=1
          set GOOS=windows
          set GOARCH=amd64
          go build -v -tags "cli" -ldflags "-s -w -X \"vencord/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)\" -X \"vencord/buildinfo.InstallerTag=${{ github.ref_name }}\"" -o EquilotlCli.exe
        shell: cmd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Equilotl-windows
          path: |
            Equilotl.exe
            EquilotlCli.exe
